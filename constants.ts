import type { 
    Translation, 
    Patient, 
    Service, 
    Doctor, 
    Role, 
    Specialty, 
    EmergencyCase,
    Bed,
    InpatientRecord,
    InpatientLocationKey,
    AdmissionReasonKey,
    Invoice,
    BillableService,
    ServiceCategoryKey,
    PurchaseRecord,
    Employee,
    PayrollRecord,
    EmployeeLeave,
    LabTest,
    AvailableLabTest,
    RadiologyScan,
    AvailableRadiologyScan,
    RadiologyScanType,
    Medication,
    PharmacySale,
    StockPurchase,
    StockRequisition,
    SurgicalProcedureRecord,
    AvailableSurgicalProcedure,
    SurgicalDepartmentKey,
    SurgeryClassificationKey,
    InventoryItem,
    UserLog
} from './types';

export const mockPatients: Patient[] = [
  { id: 'P001', name: 'John Doe', age: 45, gender: 'Male', address: '123 Main St, Anytown', patientPhone: '555-1234', emergencyContact: '555-5678', registrationDate: '2023-01-15', lastVisitDate: '2024-05-20', services: ['lab', 'radiology'] },
  { id: 'P002', name: 'Jane Smith', age: 34, gender: 'Female', address: '456 Oak Ave, Anytown', patientPhone: '555-4321', emergencyContact: '555-8765', registrationDate: '2022-11-20', lastVisitDate: '2024-06-11', services: ['patients'] },
];

export const mockDoctors: Doctor[] = [
  { id: 'D001', name: 'Dr. Emily Carter', age: 42, gender: 'Female', email: 'ecarter@medisys.com', phone: '555-0101', role: 'consultant', specialty: 'cardiology' },
  { id: 'D002', name: 'Dr. Ben Hanna', age: 50, gender: 'Male', email: 'bhanna@medisys.com', phone: '555-0102', role: 'specialist', specialty: 'surgery' },
  { id: 'D003', name: 'Dr. Aisha Khan', age: 35, gender: 'Female', email: 'akhan@medisys.com', phone: '555-0103', role: 'resident', specialty: 'pediatrics' },
];

export const availableServices: Service[] = [
    { id: 'diagnostic_assistant', labelKey: 'diagnostic_assistant' },
    { id: 'patients', labelKey: 'patients' },
    { id: 'doctors', labelKey: 'doctors' },
    { id: 'emergency', labelKey: 'emergency' },
    { id: 'inpatient', labelKey: 'inpatient' },
    { id: 'lab', labelKey: 'lab' },
    { id: 'radiology', labelKey: 'radiology' },
    { id: 'pharmacy', labelKey: 'pharmacy' },
    { id: 'surgery', labelKey: 'surgery' },
    { id: 'billing', labelKey: 'billing' },
];

export const availableRoles: Role[] = [
    { id: 'consultant', labelKey: 'consultant' },
    { id: 'specialist', labelKey: 'specialist' },
    { id: 'resident', labelKey: 'resident' },
    { id: 'intern', labelKey: 'intern' },
];

export const availableSpecialties: Specialty[] = [
    { id: 'cardiology', labelKey: 'cardiology' },
    { id: 'dermatology', labelKey: 'dermatology' },
    { id: 'neurology', labelKey: 'neurology' },
    { id: 'orthopedics', labelKey: 'orthopedics' },
    { id: 'pediatrics', labelKey: 'pediatrics' },
    { id: 'radiology', labelKey: 'radiology' },
    { id: 'surgery', labelKey: 'surgery' },
];

export const mockEmergencyCases: EmergencyCase[] = [
    { id: 'ER001', patientId: 'P001', admittedAt: new Date().toISOString(), triageLevel: 'Red', status: 'In Progress', symptoms: 'Chest pain', medicalHistory: 'Hypertension', vitalSigns: 'BP 160/100', physicalExamFindings: 'Normal', labTestsRequested: 'Troponin', radiologyRequested: 'Chest X-Ray', ecgRequested: '12-lead ECG', labResults: '', radiologyResults: '', ecgResults: '', treatmentPlan: '', consultationRequest: '', consultationResponse: '', attendingERPhysicianId: 'D001', erSpecialistId: null, admittingPhysicianId: null },
];

export const mockBeds: Bed[] = [
    { id: 'B101', number: '101-A', location: 'general_ward', isOccupied: true },
    { id: 'B102', number: '101-B', location: 'general_ward', isOccupied: false },
    { id: 'B201', number: '201', location: 'icu', isOccupied: true },
];

export const availableLocations: InpatientLocationKey[] = ['general_ward', 'icu', 'maternity', 'pediatric'];
export const availableAdmissionReasons: AdmissionReasonKey[] = ['medical', 'surgery', 'observation', 'maternity'];
export const availableSurgeryTypes: SurgicalDepartmentKey[] = ['general', 'orthopedic', 'neuro', 'pediatric', 'plastic', 'thoracic', 'urology', 'endoscopy'];


export const mockInpatientRecords: InpatientRecord[] = [
    { id: 'IP001', patientId: 'P001', admissionDate: '2024-07-01', dischargeDate: null, bedId: 'B101', attendingPhysicianId: 'D001', admissionReason: 'medical', stayDuration: 5, extensionDays: 0 },
    { id: 'IP002', patientId: 'P002', admissionDate: '2024-06-28', dischargeDate: '2024-07-03', bedId: 'B201', attendingPhysicianId: 'D002', admissionReason: 'surgery', surgeryType: 'neuro', stayDuration: 5, extensionDays: 0 },
];

export const mockBillableServices: BillableService[] = [
  { id: 'CONSULT-01', name: 'Cardiology Consultation', category: 'consultation', price: 150 },
  { id: 'LAB-01', name: 'Complete Blood Count', category: 'lab', price: 75 },
  { id: 'RAD-01', name: 'Chest X-Ray', category: 'radiology', price: 120 },
];

export const mockInvoices: Invoice[] = [
  { id: 'INV-2024-001', patientId: 'P001', invoiceDate: '2024-05-21', dueDate: '2024-06-20', items: [{ serviceId: 'CONSULT-01', quantity: 1, unitPrice: 150 }], totalAmount: 150, status: 'Paid' },
  { id: 'INV-2024-002', patientId: 'P002', invoiceDate: '2024-06-12', dueDate: '2024-07-12', items: [{ serviceId: 'LAB-01', quantity: 2, unitPrice: 75 }], totalAmount: 150, status: 'Unpaid' },
];

export const mockPurchaseRecords: PurchaseRecord[] = [
    { id: 'PO-001', date: '2024-07-01', itemDescription: 'Syringes (Box of 100)', supplier: 'MedSupplies Inc.', quantity: 10, unitPrice: 25, totalCost: 250},
];

export const mockEmployees: Employee[] = [
    { id: 'E001', name: 'Mark Johnson', age: 38, gender: 'Male', phone: '555-0201', address: '789 Pine St', department: 'Nursing', jobTitle: 'Head Nurse', jobGrade: 'N5', hireDate: '2018-03-12', salary: 75000 },
];

export const mockPayrollRecords: PayrollRecord[] = [
    { id: 'PAY-001', employeeId: 'E001', payPeriod: '2024-06', issueDate: '2024-06-28', baseSalary: 6250, bonuses: 500, deductions: 1200, netPay: 5550 },
];

export const mockEmployeeLeaves: EmployeeLeave[] = [
    { id: 'L001', employeeId: 'E001', startDate: '2024-08-05', duration: 5, endDate: '2024-08-09' },
];

export const mockAvailableLabTests: AvailableLabTest[] = [
    { id: 'LT01', name: 'Complete Blood Count (CBC)', price: 50 },
    { id: 'LT02', name: 'Basic Metabolic Panel (BMP)', price: 75 },
];

export const mockLabTests: LabTest[] = [
    { id: 'L001', patientId: 'P001', testIds: ['LT01'], requestDate: '2024-07-10', status: 'Completed', results: { 'LT01': { text: 'All values within normal range.', files: [] } } },
    { id: 'L002', patientId: 'P002', testIds: ['LT01', 'LT02'], requestDate: '2024-07-11', status: 'Pending', results: { 'LT01': { text: '', files: [] }, 'LT02': { text: '', files: [] } } },
];

export const mockAvailableRadiologyScans: AvailableRadiologyScan[] = [
    { id: 'RS01', name: 'Chest X-Ray (AP/Lateral)', price: 120, scanType: 'x-ray' },
    { id: 'RS02', name: 'CT Head w/o contrast', price: 450, scanType: 'ct' },
];

export const mockRadiologyScans: RadiologyScan[] = [
    { id: 'R001', patientId: 'P001', scanIds: ['RS01'], requestDate: '2024-07-10', status: 'Completed', results: { 'RS01': { text: 'Lungs are clear.', files: [] } } },
    { id: 'R002', patientId: 'P002', scanIds: ['RS02'], requestDate: '2024-07-11', status: 'In Progress', results: { 'RS02': { text: '', files: [] } } },
];

export const mockMedications: Medication[] = [
    { id: 'MED01', tradeName: 'Panadol', scientificName: 'Paracetamol', pharmacyStock: 100, mainStock: 500, unitPrice: 5.50 },
    { id: 'MED02', tradeName: 'Amoxil', scientificName: 'Amoxicillin', pharmacyStock: 50, mainStock: 200, unitPrice: 12.00 },
];

export const mockPharmacySales: PharmacySale[] = [
    { id: 'SALE01', date: new Date().toISOString(), items: [{ medicationId: 'MED01', quantity: 2, unitPrice: 5.50 }], totalAmount: 11.00 },
];

export const mockStockPurchases: StockPurchase[] = [
    { id: 'PUR01', date: new Date().toISOString(), medicationId: 'MED01', quantity: 500, supplier: 'PharmaDist' },
];

export const mockStockRequisitions: StockRequisition[] = [
    { id: 'REQ01', date: new Date().toISOString(), medicationId: 'MED02', quantity: 50, status: 'Pending' },
];

export const mockAvailableSurgicalProcedures: AvailableSurgicalProcedure[] = [
    { id: 'GEN01', name: 'Appendectomy', department: 'general', classification: 'major', price: 5000 },
    { id: 'ORT01', name: 'Knee Arthroscopy', department: 'orthopedic', classification: 'moderate', price: 8000 },
    { id: 'NEU01', name: 'Craniotomy', department: 'neuro', classification: 'major_plus', price: 25000 },
];

export const mockSurgicalProcedures: SurgicalProcedureRecord[] = [
    { id: 'S001', patientId: 'P001', procedureId: 'GEN01', surgeonId: 'D002', anesthetistId: 'D003', diagnosis: 'Acute Appendicitis', scheduledDateTime: '2024-07-15T09:00:00Z', status: 'Scheduled', operatingRoom: 'OR 1', notes: 'NPO after midnight.' },
];

export const mockInventory: InventoryItem[] = [
    { id: 'INV01', name: 'Gloves (Box)', category: 'Medical Supplies', quantity: 50, lowStockThreshold: 10 },
    { id: 'INV02', name: 'Syringes 10ml (Box)', category: 'Medical Supplies', quantity: 5, lowStockThreshold: 5 },
    { id: 'INV03', name: 'Saline Solution 1L', category: 'Medical Supplies', quantity: 0, lowStockThreshold: 20 },
];

export const mockUserLogs: UserLog[] = [
    { id: 'LOG01', user: 'admin', action: 'User login', timestamp: new Date().toISOString(), status: 'Success' },
    { id: 'LOG02', user: 'Dr. Carter', action: 'Accessed patient record P001', timestamp: new Date().toISOString(), status: 'Success' },
    { id: 'LOG03', user: 'unknown', action: 'User login attempt', timestamp: new Date().toISOString(), status: 'Failed' },
];

const en: Translation = {
    header: {
      searchPlaceholder: "Search...",
      backToDashboard: "Back to Dashboard",
      serverSettings: "Server Settings",
      serverModalTitle: "Server Connection Settings",
      serverUrl: "Server URL",
      port: "Port",
      connect: "Connect",
      close: "Close",
      systemSettings: "System Settings",
      systemSettingsModalTitle: "System Settings",
      systemName: "System Name",
      systemIcon: "System Icon",
      uploadIcon: "Upload Icon",
      font: "Font Family",
      fontColor: "Font Color",
      fontSize: "Font Size",
      save: "Save",
    },
    modules: {
      dashboard: "Dashboard",
      diagnostic_assistant: "Diagnostic Assistant",
      patients: "Patients",
      doctors: "Doctors",
      emergency: "Emergency",
      inpatient: "Inpatient",
      lab: "Lab",
      radiology: "Radiology",
      pharmacy: "Pharmacy",
      surgery: "Surgery",
      billing: "Billing & Financials",
      hr: "Human Resources",
      inventory: "Inventory",
      reports: "Reports & Analytics",
      security: "Security & Access",
    },
    patientManagement: {
        title: "Patient Management",
        totalPatients: "Total Patients",
        searchPlaceholder: "Search patients by name...",
        addNewPatient: "Add New Patient",
        tableId: "Patient ID",
        tableName: "Name",
        tablePatientPhone: "Phone",
        tableEmergencyContact: "Emergency Contact",
        tableRegDate: "Registration Date",
        tableLastVisit: "Last Visit",
        tableServices: "Services",
        tableActions: "Actions",
        edit: "Edit",
        print: "Print",
        modalTitleAdd: "Add New Patient",
        modalTitleEdit: "Edit Patient Details",
        formName: "Full Name",
        formAge: "Age",
        formGender: "Gender",
        formGenderMale: "Male",
        formGenderFemale: "Female",
        formPatientPhone: "Patient Phone",
        formEmergencyContact: "Emergency Contact",
        formAddress: "Address",
        formRegDate: "Registration Date",
        formLastVisit: "Last Visit Date",
        formServices: "Required Services",
        save: "Save Patient",
        cancel: "Cancel",
    },
    doctorManagement: {
        title: "Doctor Management",
        searchPlaceholder: "Search doctors by name, specialty...",
        addNewDoctor: "Add New Doctor",
        tableId: "Doctor ID",
        tableName: "Name",
        tableRole: "Role",
        tableSpecialty: "Specialty",
        tablePhone: "Phone",
        tableEmail: "Email",
        tableActions: "Actions",
        edit: "Edit",
        delete: "Delete",
        print: "Print",
        deleteConfirm: "Are you sure you want to delete this doctor's record?",
        modalTitleAdd: "Add New Doctor",
        modalTitleEdit: "Edit Doctor Details",
        formName: "Full Name",
        formAge: "Age",
        formGender: "Gender",
        formGenderMale: "Male",
        formGenderFemale: "Female",
        formEmail: "Email Address",
        formPhone: "Phone Number",
        formRole: "Role",
        formSpecialty: "Specialty",
        save: "Save Doctor",
        cancel: "Cancel",
        roles: { consultant: "Consultant", specialist: "Specialist", resident: "Resident", intern: "Intern" },
        specialties: { cardiology: "Cardiology", dermatology: "Dermatology", neurology: "Neurology", orthopedics: "Orthopedics", pediatrics: "Pediatrics", radiology: "Radiology", surgery: "Surgery", anesthesiology: "Anesthesiology", oncology: "Oncology" },
    },
    diagnostic_assistant: {
        title: "AI Diagnostic Assistant",
        description: "Enter patient symptoms, history, and initial findings to get an AI-powered differential diagnosis and suggested next steps.",
        disclaimer: "This tool is for informational purposes only and is not a substitute for professional medical advice, diagnosis, or treatment. Always seek the advice of a qualified health provider.",
        inputLabel: "Patient Information (Symptoms, Vitals, History)",
        inputPlaceholder: "e.g., 45-year-old male presents with chest pain, shortness of breath. History of hypertension. BP 160/100, HR 95...",
        analyzeButton: "Analyze with Gemini",
        loading: "Analyzing...",
        analysisTitle: "Diagnostic Analysis",
        noAnalysis: "Analysis results will appear here once you submit patient information.",
        enterSymptoms: "Please enter patient information before analyzing.",
        errorPrefix: "An error occurred:",
    },
    emergency: {
        title: "Emergency Room Management",
        inProgressCases: "Cases In Progress",
        redCases: "Triage: Red",
        yellowCases: "Triage: Yellow",
        searchPlaceholder: "Search by patient name or ID...",
        addNewCase: "Add New Case",
        tablePatientId: "Patient ID",
        tablePatientName: "Patient Name",
        tableTriage: "Triage",
        tableAdmittedAt: "Admitted At",
        tableAttending: "Attending",
        tableStatus: "Status",
        tableActions: "Actions",
        medicalRecord: "View Medical Record",
        triageRed: "Red (Immediate)",
        triageYellow: "Yellow (Urgent)",
        triageGreen: "Green (Less Urgent)",
        statusInProgress: "In Progress",
        statusAdmitted: "Admitted",
        statusDischarged: "Discharged",
        addCaseTitle: "Add New Emergency Case",
        step1: "Step 1: Find Patient",
        step2: "Step 2: Enter Case Details",
        searchPatientPlaceholder: "Search by name, ID, or phone...",
        selectPatient: "Select",
        noPatientFound: "No patient found.",
        patientDetails: "Patient Details",
        triage_level: "Triage Level",
        initial_status: "Initial Status",
        back: "Back",
        saveCase: "Save Case",
        medicalRecordTitle: "Emergency Medical Record",
        patientInfo: "Patient Information",
        patientId: "Patient ID",
        name: "Name",
        age: "Age",
        gender: "Gender",
        address: "Address",
        close: "Close",
        saveChanges: "Save Changes",
        clinicalAssessment: "Clinical Assessment",
        symptoms: "Symptoms",
        medicalHistory: "Medical History",
        vitalSigns: "Vital Signs",
        physicalExamFindings: "Physical Exam Findings",
        investigationsAndResults: "Investigations & Results",
        labTests: "Lab Tests",
        radiology: "Radiology",
        ecg: "ECG",
        requested: "Requested",
        results: "Results",
        planAndConsults: "Plan & Consultations",
        treatmentPlan: "Treatment Plan",
        consultationRequest: "Consultation Request",
        consultationResponse: "Consultation Response",
        physicians: "Physicians",
        attendingERPhysician: "Attending ER Physician",
        erSpecialist: "ER Specialist",
        admittingPhysician: "Admitting Physician",
    },
    inpatient: {
        title: "Inpatient Management",
        admittedPatients: "Currently Admitted",
        avgStay: "Average Stay",
        days: "days",
        searchPlaceholder: "Search admitted patients...",
        admitNewPatient: "Admit New Patient",
        manageBeds: "Manage Beds",
        tablePatientId: "Patient ID",
        tablePatientName: "Patient Name",
        tableAdmissionDate: "Admission Date",
        tableLocation: "Location",
        tableBed: "Bed",
        tableReason: "Reason",
        tableAttending: "Attending",
        tableStay: "Stay (Days)",
        admitPatientTitle: "Admit New Patient",
        step1: "Step 1: Find Patient",
        step2: "Step 2: Admission Details",
        searchPatientPlaceholder: "Search patient...",
        selectPatient: "Select",
        noPatientFound: "No patient found.",
        patientDetails: "Patient Details",
        admissionDetails: "Admission Details",
        admissionLocation: "Location",
        bedNumber: "Bed Number",
        noBedsAvailable: "No beds available in this location",
        admissionReason: "Admission Reason",
        surgeryType: "Surgery Type",
        attendingPhysician: "Attending Physician",
        estimatedStay: "Estimated Stay (days)",
        back: "Back",
        saveAdmission: "Save Admission",
        manageBedsTitle: "Manage Ward Beds",
        bedNumberLabel: "Bed Number",
        locationLabel: "Location",
        addBed: "Add Bed",
        deleteBedConfirm: "Are you sure you want to delete this bed? This cannot be undone.",
        delete: "Delete",
        tableStatus: "Status",
        locations: { general_ward: "General Ward", icu: "ICU", maternity: "Maternity", pediatric: "Pediatric" },
        reasons: { medical: "Medical", surgery: "Surgery", observation: "Observation", maternity: "Maternity" },
        surgeries: { general: "General Surgery", orthopedic: "Orthopedic Surgery", neuro: "Neurosurgery", pediatric: 'Pediatric Surgery', plastic: 'Plastic Surgery', thoracic: 'Thoracic Surgery', urology: 'Urology', endoscopy: 'Endoscopy' },
    },
    lab: {
        title: "Laboratory Management",
        pendingTests: "Pending Tests",
        completedToday: "Completed Today",
        inProgress: "In Progress",
        searchPlaceholder: "Search patient requests...",
        manageTests: "Manage Tests",
        newTestRequest: "New Test Request",
        tableId: "Request ID",
        tablePatient: "Patient",
        tableTests: "Tests",
        tableDate: "Date",
        tableStatus: "Status",
        tableActions: "Actions",
        statusPending: "Pending",
        statusCompleted: "Completed",
        statusInProgress: "In Progress",
        viewResults: "View/Enter Results",
        manageTestsTitle: "Manage Available Lab Tests",
        testName: "Test Name",
        testPrice: "Price",
        testId: "Test ID",
        addTest: "Add Test",
        updateTest: "Update Test",
        cancelEdit: "Cancel Edit",
        editTest: "Edit Test",
        deleteTestConfirm: "Are you sure you want to delete this test?",
        newRequestTitle: "New Lab Test Request",
        step1: "Step 1: Find Patient",
        step2: "Step 2: Select Tests",
        searchPatientPlaceholder: "Search by name, ID...",
        selectPatient: "Select",
        noPatientFound: "No patient found",
        patientDetails: "Patient Details",
        selectTests: "Select Tests",
        noTestsAvailable: "No lab tests configured.",
        back: "Back",
        saveRequest: "Save Request",
        resultsModalTitle: "Lab Test Results",
        patientInfo: "Patient Information",
        result: "Result",
        textResult: "Text Result / Findings",
        uploadedFiles: "Uploaded Files",
        noFilesUploaded: "No files uploaded.",
        removeFile: "Remove file",
        uploadFile: "Upload File(s)",
        close: "Close",
        printResults: "Print Results",
        saveResults: "Save & Mark as Completed",
    },
    radiology: {
        title: "Radiology Management",
        pendingScans: "Pending Scans",
        completedToday: "Completed Today",
        inProgress: "In Progress",
        searchPlaceholder: "Search patient requests...",
        manageScans: "Manage Scans",
        newScanRequest: "New Scan Request",
        tableId: "Request ID",
        tablePatient: "Patient",
        tableScans: "Scans",
        tableDate: "Date",
        tableStatus: "Status",
        tableActions: "Actions",
        statusPending: "Pending",
        statusCompleted: "Completed",
        statusInProgress: "In Progress",
        viewEditReport: "View/Edit Report",
        delete: "Delete Request",
        deleteRequestConfirm: "Are you sure you want to delete this scan request?",
        manageScansTitle: "Manage Available Radiology Scans",
        scanName: "Scan Name",
        scanPrice: "Price",
        scanId: "Scan ID",
        scanType: "Scan Type",
        addScan: "Add Scan",
        updateScan: "Update Scan",
        cancelEdit: "Cancel Edit",
        edit: "Edit",
        deleteScanConfirm: "Are you sure you want to delete this scan type?",
        newRequestTitle: "New Radiology Scan Request",
        step1: "Step 1: Find Patient",
        step2: "Step 2: Select Scans",
        searchPatientPlaceholder: "Search patient by name, ID...",
        selectPatient: "Select",
        noPatientFound: "No patient found.",
        patientDetails: "Patient Details",
        selectScans: "Select Scans",
        noScansAvailable: "No scans available for this type.",
        back: "Back",
        saveRequest: "Save Request",
        reportModalTitle: "Radiology Report",
        patientInfo: "Patient Information",
        report: "Report",
        findings: "Findings / Report Text",
        attachedFiles: "Attached Files / Images",
        noFilesAttached: "No files attached.",
        removeFile: "Remove File",
        uploadFile: "Upload File(s)",
        close: "Close",
        printReport: "Print Report",
        saveReport: "Save Report & Mark as Completed",
        scanTypes: { "x-ray": "X-Ray", ct: "CT", mri: "MRI", ultrasound: "Ultrasound", echo: 'Echocardiogram', doppler: 'Doppler' },
    },
    pharmacy: {
        title: "Pharmacy Management",
        tabs: { sales: "Sales", medications: "Medications", inventory: "Inventory" },
        sales: {
            title: "Point of Sale",
            newSale: "New Sale",
            tableSaleId: "Sale ID",
            tableDate: "Date",
            tableItems: "Items",
            tableTotal: "Total",
            tableActions: "Actions",
            print: "Print Receipt",
            view: "View/Edit",
            delete: "Delete",
            deleteConfirm: "Are you sure you want to delete this sale?",
            newSaleTitle: "New Pharmacy Sale",
            editSaleTitle: "Edit Sale",
            searchPlaceholder: "Search for medications...",
            addSelectedItems: "Add",
            medication: "Medication",
            quantity: "Quantity",
            lineTotal: "Total",
            invoiceTotal: "Total Amount",
            cancel: "Cancel",
            saveSale: "Save Sale",
        },
        medications: {
            title: "Medication Catalog",
            addMedication: "Add Medication",
            tableMedId: "Med ID",
            tableTradeName: "Trade Name",
            tableScientificName: "Scientific Name",
            tableUnitPrice: "Unit Price",
            tablePharmacyStock: "Pharmacy Stock",
            tableMainStock: "Main Stock",
            tableActions: "Actions",
            edit: "Edit",
            delete: "Delete",
            deleteConfirm: "Are you sure you want to delete this medication?",
            addMedTitle: "Add New Medication",
            editMedTitle: "Edit Medication",
            tradeName: "Trade Name",
            scientificName: "Scientific Name",
            unitPrice: "Unit Price",
            cancel: "Cancel",
            saveMedication: "Save Medication",
        },
        inventory: {
            purchases: "Purchases",
            requisitions: "Stock Requisitions",
            recordPurchase: "Record Purchase",
            newRequisition: "New Requisition",
            tablePurchaseId: "Purchase ID",
            tableDate: "Date",
            tableMedication: "Medication",
            tableQuantity: "Quantity",
            tableSupplier: "Supplier",
            tableReqId: "Req. ID",
            tableStatus: "Status",
            actions: "Actions",
            statusPending: "Pending",
            statusFulfilled: "Fulfilled",
            fulfill: "Fulfill",
        },
    },
    surgery: {
        title: "Surgery Management",
        scheduledSurgeries: "Scheduled",
        surgeriesToday: "Today",
        operatingRooms: "Active ORs",
        searchPlaceholder: "Search patient or procedure...",
        manageProcedures: "Manage Procedures",
        registerNew: "Register New Surgery",
        tableId: "Surgery ID",
        tablePatient: "Patient",
        tableProcedure: "Procedure",
        tableSurgeon: "Surgeon",
        tableDateTime: "Date & Time",
        tableRoom: "OR",
        tableStatus: "Status",
        tableActions: "Actions",
        edit: "Edit",
        delete: "Delete",
        print: "Print",
        deleteConfirm: "Are you sure you want to delete this record?",
        statusScheduled: "Scheduled",
        statusInProgress: "In Progress",
        statusCompleted: "Completed",
        statusCancelled: "Cancelled",

        manageProceduresTitle: "Manage Surgical Procedures",
        procedureName: "Procedure Name",
        department: "Department",
        classification: "Classification",
        price: "Price",
        addProcedure: "Add Procedure",
        updateProcedure: "Update Procedure",
        deleteProcedureConfirm: "Are you sure you want to delete this procedure?",

        registerModalTitle: "Register New Surgery",
        editModalTitle: "Edit Surgery Record",
        step1: "Step 1: Find Patient",
        step2: "Step 2: Enter Surgery Details",
        searchPatientPlaceholder: "Search by name, ID, or phone...",
        selectPatient: "Select",
        noPatientFound: "No patient found.",
        patientDetails: "Patient Details",
        surgeryDetails: "Surgery Details",
        diagnosis: "Diagnosis",
        procedure: "Procedure",
        noProceduresInDept: "No procedures found for this department.",
        surgeon: "Surgeon",
        anesthetist: "Anesthetist",
        operatingRoom: "Operating Room",
        notes: "Notes",
        status: "Status",
        back: "Back",
        save: "Save",
        cancel: "Cancel",
        
        departments: { 
            general: "General Surgery", 
            pediatric: "Pediatric Surgery", 
            plastic: "Plastic Surgery", 
            orthopedic: "Orthopedic Surgery", 
            urology: "Urology", 
            neuro: "Neurosurgery", 
            thoracic: "Thoracic Surgery", 
            endoscopy: "Endoscopy" 
        },
        classifications: { 
            major_plus: "Major Plus", 
            major: "Major", 
            moderate: "Moderate", 
            minor: "Minor" 
        },
    },
    financialManagement: {
        title: "Billing & Financials",
        tabs: { invoicing: "Invoicing", services: "Services", purchases: "Purchases", payroll: "Payroll", reports: "Reports" },
        invoicing: {
            title: "Patient Invoices",
            newInvoice: "New Invoice",
            deleteConfirm: "Are you sure you want to delete this invoice?",
            tableInvoiceId: "Invoice ID",
            tablePatient: "Patient",
            tableDate: "Date",
            tableTotal: "Total",
            tableStatus: "Status",
            tableActions: "Actions",
            print: "Print",
            edit: "Edit",
            delete: "Delete",
            statusPaid: "Paid",
            statusUnpaid: "Unpaid",
            statusOverdue: "Overdue",
            modalTitleNew: "Create New Invoice",
            modalTitleEdit: "Edit Invoice",
            step1: "Step 1: Find Patient",
            searchPatient: "Search for a patient...",
            selectPatient: "Select",
            noPatientFound: "No patient found.",
            step2: "Step 2: Add Services",
            patientDetails: "Patient Details",
            selectServices: "Add services to invoice",
            service: "Service",
            quantity: "Qty",
            price: "Price",
            lineTotal: "Total",
            invoiceTotal: "Invoice Total",
            back: "Back",
            save: "Save Invoice",
        },
        services: {
            title: "Billable Services",
            addService: "Add Service",
            deleteConfirm: "Are you sure you want to delete this service?",
            tableServiceId: "Service ID",
            tableName: "Name",
            tableCategory: "Category",
            tablePrice: "Price",
            tableActions: "Actions",
            edit: "Edit",
            delete: "Delete",
            modalTitleNew: "Add New Service",
            modalTitleEdit: "Edit Service",
            formCategory: "Category",
            formName: "Service Name",
            formPrice: "Price",
            cancel: "Cancel",
            save: "Save Service",
            categories: { consultation: "Consultation", emergency: "Emergency", lab: "Laboratory", radiology: "Radiology", surgery: "Surgery", pharmacy: "Pharmacy", inpatient: "Inpatient Stay" },
        },
        purchases: {
            title: "Purchases & Expenses",
            recordPurchase: "Record Purchase",
            tablePurchaseId: "Purchase ID",
            tableDate: "Date",
            tableItem: "Item/Description",
            tableSupplier: "Supplier",
            tableTotalCost: "Total Cost",
            tableActions: "Actions",
            modalTitleNew: "Record New Purchase",
            modalTitleEdit: "Edit Purchase Record",
            formItem: "Item/Description",
            formSupplier: "Supplier",
            formQuantity: "Quantity",
            formUnitPrice: "Unit Price",
            cancel: "Cancel",
            save: "Save Purchase",
        },
        payroll: {
            title: "Employee Payroll",
            runPayroll: "Run Payroll",
            deleteConfirm: "Are you sure you want to delete this payroll record?",
            tableEmployee: "Employee",
            tablePayPeriod: "Pay Period",
            tableNetPay: "Net Pay",
            tableIssueDate: "Issue Date",
            tableActions: "Actions",
            printPayslip: "Print Payslip",
            edit: "Edit",
            delete: "Delete",
            modalTitleNew: "Run New Payroll",
            modalTitleEdit: "Edit Payroll Record",
            formEmployee: "Employee",
            formPayPeriod: "Pay Period (e.g., 2024-07)",
            formBaseSalary: "Base Salary",
            formBonuses: "Bonuses",
            formDeductions: "Deductions",
            cancel: "Cancel",
            save: "Save Record",
        },
        reports: {
            totalRevenue: "Total Revenue",
            totalExpenses: "Total Expenses",
            totalPayroll: "Total Payroll",
            netProfit: "Net Profit",
            revenueVsExpenses: "Revenue vs. Expenses",
            revenueBreakdown: "Revenue Breakdown by Category",
            invoiceStatusSummary: "Invoice Status Summary",
            status: "Status",
            count: "# of Invoices",
            amount: "Total Amount",
        },
    },
    hr: {
        title: "Human Resources",
        tabs: { employees: "Employee Records", leaves: "Leave Management" },
        employees: {
            searchPlaceholder: "Search employees...",
            printAll: "Print All",
            addNew: "Add New Employee",
            tableId: "Emp. ID",
            tableName: "Name",
            tableDepartment: "Department",
            tableJobTitle: "Job Title",
            tablePhone: "Phone",
            tableHireDate: "Hire Date",
            tableActions: "Actions",
            print: "Print",
            edit: "Edit",
            delete: "Delete",
            deleteConfirm: "Are you sure you want to delete this employee?",
            modalTitleAdd: "Add New Employee",
            modalTitleEdit: "Edit Employee",
            formName: "Full Name",
            formAge: "Age",
            formGender: "Gender",
            formGenderMale: "Male",
            formGenderFemale: "Female",
            formPhone: "Phone",
            formAddress: "Address",
            formDepartment: "Department",
            formJobTitle: "Job Title",
            formJobGrade: "Job Grade",
            formHireDate: "Hire Date",
            formSalary: "Salary",
        },
        leaves: {
            title: "Leave Management",
            printAll: "Print All",
            addNew: "Add New Leave",
            tableEmployee: "Employee",
            tableDepartment: "Department",
            tableStartDate: "Start Date",
            tableDuration: "Duration",
            days: "days",
            tableEndDate: "End Date",
            tableActions: "Actions",
            print: "Print",
            edit: "Edit",
            delete: "Delete",
            deleteConfirm: "Are you sure you want to delete this leave record?",
            modalTitleAdd: "Add New Leave Record",
            modalTitleEdit: "Edit Leave Record",
            formEmployee: "Select Employee",
            formStartDate: "Start Date",
            formDuration: "Duration (days)",
            formEndDate: "End Date (auto-calculated)",
        },
        cancel: "Cancel",
        save: "Save",
    },
    inventory: {
        title: "Inventory Management",
        totalItems: "Total Items",
        lowStock: "Low Stock Items",
        outOfStock: "Out of Stock",
        searchPlaceholder: "Search items...",
        tableId: "Item ID",
        tableName: "Item Name",
        tableCategory: "Category",
        tableQuantity: "Quantity",
        tableStatus: "Status",
        statusOutOfStock: "Out of Stock",
        statusLowStock: "Low Stock",
        statusInStock: "In Stock",
    },
    reports: {
        title: "Reports & Analytics",
        financialOverview: "Financial Overview",
        revenueVsExpense: "Revenue vs. Expense",
        patientDemographics: "Patient Demographics",
        ageDistribution: "Age Distribution",
        departmentPerformance: "Department Performance",
        appointmentsByDept: "Appointments by Department",
        occupancyRate: "Occupancy Rate",
        bedOccupancy: "Bed Occupancy",
        chartPlaceholder: "Chart placeholder",
    },
    security: {
        title: "Security & Access Logs",
        totalEvents: "Total Events Logged",
        successfulLogins: "Successful Logins (24h)",
        failedAttempts: "Failed Attempts (24h)",
        searchPlaceholder: "Search logs by user or action...",
        tableId: "Log ID",
        tableUser: "User",
        tableAction: "Action",
        tableTimestamp: "Timestamp",
        tableStatus: "Status",
        statusSuccess: "Success",
        statusFailed: "Failed",
    },
    placeholders: {
        underDevelopment: "Under Development",
        featureComingSoon: "This feature is currently under development and will be available soon. Thank you for your patience.",
    }
};

const ar: Translation = {
  header: {
      searchPlaceholder: "بحث...",
      backToDashboard: "العودة إلى لوحة التحكم",
      serverSettings: "إعدادات الخادم",
      serverModalTitle: "إعدادات اتصال الخادم",
      serverUrl: "عنوان URL للخادم",
      port: "المنفذ",
      connect: "اتصال",
      close: "إغلاق",
      systemSettings: "إعدادات النظام",
      systemSettingsModalTitle: "إعدادات النظام",
      systemName: "اسم النظام",
      systemIcon: "أيقونة النظام",
      uploadIcon: "رفع أيقونة",
      font: "نوع الخط",
      fontColor: "لون الخط",
      fontSize: "حجم الخط",
      save: "حفظ",
  },
  modules: {
      dashboard: "لوحة التحكم",
      diagnostic_assistant: "المساعد التشخيصي",
      patients: "المرضى",
      doctors: "الأطباء",
      emergency: "الطوارئ",
      inpatient: "التنويم",
      lab: "المختبر",
      radiology: "الأشعة",
      pharmacy: "الصيدلية",
      surgery: "الجراحة",
      billing: "الفواتير والمالية",
      hr: "الموارد البشرية",
      inventory: "المخزون",
      reports: "التقارير والتحليلات",
      security: "الأمن والوصول",
  },
  patientManagement: en.patientManagement,
  doctorManagement: en.doctorManagement,
  diagnostic_assistant: en.diagnostic_assistant,
  emergency: en.emergency,
  inpatient: en.inpatient,
  lab: en.lab,
  radiology: en.radiology,
  pharmacy: en.pharmacy,
  surgery: {
      ...en.surgery,
      title: "إدارة العمليات الجراحية",
      departments: {
          general: "جراحة عامة",
          pediatric: "جراحة أطفال",
          plastic: "جراحة تجميل",
          orthopedic: "جراحة عظام",
          urology: "جراحة مسالك بولية",
          neuro: "جراحة مخ وأعصاب",
          thoracic: "جراحة قفص صدري",
          endoscopy: "مناظير"
      },
  },
  financialManagement: en.financialManagement,
  hr: en.hr,
  inventory: en.inventory,
  reports: en.reports,
  security: en.security,
  placeholders: {
      underDevelopment: "قيد التطوير",
      featureComingSoon: "هذه الميزة قيد التطوير حاليًا وستكون متاحة قريبًا. شكرًا لصبركم.",
  }
};


export const translations = { en, ar };